{"version":3,"sources":["components/reversi/2d-vector.js","components/reversi/board.js","components/reversi/player-colour.js","components/reversi/player.js","components/reversi/game.js","components/reversi/engine.js","components/icons.js","components/othello.js","App.js","index.js"],"names":["TwoDimensionalVector","dx","dy","this","eightDirections","PlayerColour","boardArea","boardWidth","blackPlayerToken","Board","whitePlayer","blackPlayer","boardString","createInitialBoardString","length","Error","boardArray","generateFromString","generateAsString","row","column","Number","isNaN","areCoordinatesOnBoard","player","returnObject","flippedPieces","score","getSquareState","direction","canFlipInThisDirection","undoBuffer","row2","column2","squareState","colour","push","concat","coord","setSquareState","squareScore","piecePopulation","opponent","boardAsString","boardSize","col","token","isInEdgeColumn","boardHeight","result","split","c","undefined","map","join","halfWidth","Math","floor","halfHeight","getRandomArrayElement","array","random","Player","game","White","Black","nPly","nParentScore","NaN","nBestUncleRecursiveScore","bestColumn","bestMoves","bestRow","bestScore","nBestScore","doneSearching","placePieceResult","board","placePiece","nScore","victoryScore","childReturnObject","findBestMove","squareCoordinates","selectedBestMove","Game","match","noLegalMovesForPlayer","isGameDeadlocked","gameState","maxPly","initialBoardAsString","Undo","className","xmlns","width","height","viewBox","enableBackground","d","NewGame","SwitchColor","UserHuman","PlayerComputer","LastMove","fill","CheckMark","SunIcon","MoonIcon","Othello","props","state","a","prev","turn","demo","winner","black","white","human","passes","showLast","showAvail","last","setState","validMoves","move","comp","neg","one","zero","i","j","document","getElementById","classList","add","setTimeout","remove","t","x","y","tot","m","n","isValid","f","gameResult","count","isAllowed","passAnimation","st","playerToken","blackPopulation","isGameOver","numPiecesFlippedInLastMove","whitePopulation","engine","console","log","error","b","bestMove","checkInclution","updateBoard","arr","slice","reset","id","box","onClick","undoMove","bind","humanGame","title","switchColor","toggleLastMove","toggleAvailMoves","React","PureComponent","App","useState","theme","setTheme","tabIndex","href","rel","target","aria-label","style","color","position","top","border","right","aria-hidden","transformOrigin","themes","body","setAttribute","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d44a1eb2.chunk.js","sourcesContent":["// github:tom-weatherhead/thaw-reversi-engine.ts/src/2d-vector.ts\nexport class TwoDimensionalVector {\n    constructor(dx, dy) {\n        this.dx = dx;\n        this.dy = dy;\n    }\n}\nTwoDimensionalVector.eightDirections = [\n    new TwoDimensionalVector(-1, -1),\n    new TwoDimensionalVector(0, -1),\n    new TwoDimensionalVector(1, -1),\n    new TwoDimensionalVector(-1, 0),\n    new TwoDimensionalVector(1, 0),\n    new TwoDimensionalVector(-1, 1),\n    new TwoDimensionalVector(0, 1),\n    new TwoDimensionalVector(1, 1)\n];\n","// github:tom-weatherhead/thaw-reversi-engine.ts/src/board.ts\n// import {createArrayFromElement} from 'thaw-common-utilities.ts';\nimport {TwoDimensionalVector} from './2d-vector';\nexport const boardSize = 8;\nexport const boardWidth = boardSize;\nexport const boardHeight = boardWidth; // Ensures that the board is square.\nexport const boardArea = boardWidth * boardHeight;\nexport const whitePlayerToken = 'X'; // 'W' ?\nexport const blackPlayerToken = 'O'; // 'B' ?\nconst emptySquareToken = ' '; // 'E' ? This would make the board string URL-safe.\nexport class Board {\n  constructor(whitePlayer, blackPlayer, boardString = '') {\n    boardString = boardString || Board.createInitialBoardString();\n    if (boardString.length !== boardArea) {\n      throw new Error(`Board constructor: The length of boardString is not ${boardArea}.`);\n    }\n    this.boardArray = this.generateFromString(boardString, whitePlayer, blackPlayer);\n  }\n  static createInitialBoardString() {\n    // const boardArray = createArrayFromElement(emptySquareToken, boardArea);\n    const boardArray = [\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \"X\",\n      \"O\",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \"O\",\n      \"X\",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \",\n      \" \"\n    ]\n    // console.log(boardArray);\n    const halfWidth = Math.floor(boardWidth / 2);\n    const halfHeight = Math.floor(boardHeight / 2);\n    // JavaScript strings are immutable.\n    // See https://stackoverflow.com/questions/1431094/how-do-i-replace-a-character-at-a-particular-index-in-javascript\n    // Change boardArray before the join() instead of trying to change the resulting string after.\n    boardArray[(halfHeight - 1) * boardWidth + halfWidth - 1] = whitePlayerToken;\n    boardArray[(halfHeight - 1) * boardWidth + halfWidth] = blackPlayerToken;\n    boardArray[halfHeight * boardWidth + halfWidth - 1] = blackPlayerToken;\n    boardArray[halfHeight * boardWidth + halfWidth] = whitePlayerToken;\n    return boardArray.join('');\n  }\n  getAsString() {\n    return this.generateAsString();\n  }\n  areCoordinatesOnBoard(row, column) {\n    return (!Number.isNaN(row) && !Number.isNaN(column) && row >= 0 && row < boardHeight && column >= 0 && column < boardWidth);\n  }\n  getSquareState(row, column) {\n    if (!this.areCoordinatesOnBoard(row, column)) {\n      return undefined;\n    }\n    return this.boardArray[row * boardWidth + column];\n  }\n  setSquareState(row, column, player) {\n    if (!this.areCoordinatesOnBoard(row, column)) {\n      throw new Error('Board.setSquareState() : Coordinates are off the board.');\n    }\n    this.boardArray[row * boardWidth + column] = player;\n  }\n  placePiece(player, row, column) {\n    const returnObject = {\n      flippedPieces: [],\n      score: 0\n    };\n    if (!this.areCoordinatesOnBoard(row, column) || typeof this.getSquareState(row, column) !== 'undefined') {\n      return undefined;\n    }\n    for (const direction of TwoDimensionalVector.eightDirections) {\n      // Pass 1: Scan.\n      let canFlipInThisDirection;\n      const undoBuffer = [];\n      let row2 = row;\n      let column2 = column;\n      for (;;) {\n        row2 += direction.dy;\n        column2 += direction.dx;\n        if (typeof canFlipInThisDirection !== 'undefined' || !this.areCoordinatesOnBoard(row2, column2)) {\n          break;\n        }\n        const squareState = this.getSquareState(row2, column2);\n        if (typeof squareState === 'undefined') {\n          canFlipInThisDirection = false;\n        } else if (squareState.colour === player.colour) {\n          canFlipInThisDirection = true;\n        } else {\n          // squareState === opponentToken\n          undoBuffer.push({row: row2, column: column2});\n        }\n      }\n      if (canFlipInThisDirection && undoBuffer.length > 0) {\n        returnObject.flippedPieces = returnObject.flippedPieces.concat(undoBuffer);\n      }\n    }\n    if (returnObject.flippedPieces.length === 0) {\n      // No opposing pieces were flipped; thus the move fails.\n      return undefined;\n    }\n    // Pass 2: Flip.\n    for (const coord of returnObject.flippedPieces) {\n      this.setSquareState(coord.row, coord.column, player);\n      returnObject.score += 2 * this.squareScore(coord.row, coord.column);\n    }\n    this.setSquareState(row, column, player);\n    returnObject.score += this.squareScore(row, column);\n    player.piecePopulation += returnObject.flippedPieces.length + 1;\n    player.opponent.piecePopulation -= returnObject.flippedPieces.length;\n    return returnObject;\n  }\n  getPrintedBoardAsString() {\n    const rowLabels = '12345678';\n    const columnLabels = 'abcdefgh';\n    let boardAsString = '';\n    // Display row 7 first, row 0 last.\n    for (let row = boardSize - 1; row >= 0; --row) {\n      boardAsString = boardAsString + rowLabels[row] + ' ';\n      for (let col = 0; col < boardSize; ++col) {\n        let output = '?';\n        const player = this.getSquareState(row, col);\n        if (typeof player === 'undefined') {\n          output = (row + col) % 2 === 0\n            ? '+'\n            : ' ';\n        } else {\n          output = player.token;\n        }\n        boardAsString = boardAsString + output;\n      }\n      boardAsString = boardAsString + '\\n';\n    }\n    boardAsString = boardAsString + '\\n  ' + columnLabels + '\\n';\n    return boardAsString;\n  }\n  // public printBoard(): void {\n  // \tconsole.log(this.getPrintedBoardAsString());\n  // }\n  squareScore(row, column) {\n    // Calculate a useful heuristic.\n    const interiorSquareScore = 1;\n    const edgeSquareScore = 2;\n    const cornerSquareScore = 8;\n    const isInEdgeColumn = column === 0 || column === boardWidth - 1;\n    if (row === 0 || row === boardHeight - 1) {\n      if (isInEdgeColumn) {\n        return cornerSquareScore;\n      } else {\n        return edgeSquareScore;\n      }\n    } else if (isInEdgeColumn) {\n      return edgeSquareScore;\n    } else {\n      return interiorSquareScore;\n    }\n  }\n  generateFromString(boardString, whitePlayer, blackPlayer) {\n    const result = [];\n    // Split a string into an array of characters:\n    // see https://stackoverflow.com/questions/4547609/how-do-you-get-a-string-to-a-character-array-in-javascript/34717402#34717402\n    for (const c of boardString.split('')) {\n      if (c === emptySquareToken) {\n        result.push(undefined);\n      } else if (c === whitePlayer.token) {\n        result.push(whitePlayer);\n      } else if (c === blackPlayer.token) {\n        result.push(blackPlayer);\n      } else {\n        throw new Error('Board.generateFromString() error');\n      }\n    }\n    return result;\n  }\n  generateAsString() {\n    return this.boardArray.map(\n      (player) => typeof player !== 'undefined'\n      ? player.token\n      : emptySquareToken).join('');\n  }\n}\n","// github:tom-weatherhead/thaw-reversi-engine.ts/src/player-colour.ts\nexport var PlayerColour;\n(function (PlayerColour) {\n    PlayerColour[PlayerColour[\"Empty\"] = 0] = \"Empty\";\n    PlayerColour[PlayerColour[\"White\"] = 1] = \"White\";\n    PlayerColour[PlayerColour[\"Black\"] = 2] = \"Black\";\n})(PlayerColour || (PlayerColour = {}));\n","// github:tom-weatherhead/thaw-reversi-engine.ts/src/player.ts\nimport { blackPlayerToken, boardArea, boardHeight, boardWidth, whitePlayerToken } from './board';\nimport { PlayerColour } from './player-colour';\n\nexport function getRandomArrayElement(array) {\n    if (!array.length) {\n        return undefined;\n    }\n    return array[Math.floor(Math.random() * array.length)];\n}\n\nexport class Player {\n    constructor(colour, game, piecePopulation) {\n        let token;\n        switch (colour) {\n            case PlayerColour.White:\n                token = whitePlayerToken;\n                break;\n            case PlayerColour.Black:\n                token = blackPlayerToken;\n                break;\n            default:\n                throw new Error(`Player constructor: Illegal PlayerColour '${PlayerColour[colour]}' (${colour})`);\n        }\n        this.colour = colour;\n        this.piecePopulation = piecePopulation;\n        this.token = token;\n        // this.name = PlayerColour[colour];\n        this.game = game;\n        this.opponent = this;\n    }\n    // public get board(): Board {\n    // \treturn this.game.board;\n    // }\n    findBestMove(nPly, nParentScore = NaN, nBestUncleRecursiveScore = NaN) {\n        // nParentScore and nBestUncleRecursiveScore are for alpha-beta pruning.\n        const returnObject = {\n            bestColumn: NaN,\n            bestMoves: [],\n            bestRow: NaN,\n            bestScore: NaN\n            // , numberOfLegalMoves: 0\n        };\n        let nBestScore = NaN;\n        let bestMoves = [];\n        let doneSearching = false;\n        for (let row = 0; row < boardHeight && !doneSearching; ++row) {\n            for (let column = 0; column < boardWidth; ++column) {\n                const placePieceResult = this.game.board.placePiece(this, row, column);\n                if (typeof placePieceResult === 'undefined') {\n                    continue;\n                }\n                // returnObject.numberOfLegalMoves++;\n                let nScore = placePieceResult.score;\n                if (this.opponent.piecePopulation === 0) {\n                    // The opposing player has been annihilated.\n                    nScore = this.game.victoryScore;\n                }\n                else if (nPly > 1 &&\n                    this.piecePopulation + this.opponent.piecePopulation <\n                        boardArea) {\n                    const childReturnObject = this.opponent.findBestMove(nPly - 1, nScore, nBestScore);\n                    nScore -= childReturnObject.bestScore;\n                }\n                this.game.board.setSquareState(row, column, undefined);\n                for (const squareCoordinates of placePieceResult.flippedPieces) {\n                    this.game.board.setSquareState(squareCoordinates.row, squareCoordinates.column, this.opponent);\n                }\n                this.piecePopulation -=\n                    placePieceResult.flippedPieces.length + 1;\n                this.opponent.piecePopulation +=\n                    placePieceResult.flippedPieces.length;\n                if (Number.isNaN(nBestScore) || nScore > nBestScore) {\n                    nBestScore = nScore;\n                    bestMoves = [];\n                    bestMoves.push({ row, column });\n                    if (!Number.isNaN(nParentScore) &&\n                        !Number.isNaN(nBestUncleRecursiveScore) &&\n                        nParentScore - nBestScore < nBestUncleRecursiveScore) {\n                        // *** Here is where the alpha-beta pruning happens ****\n                        // Because of the initial parameters for the top-level move, this break is never executed for the top-level move.\n                        doneSearching = true;\n                        break; // ie. return.\n                    }\n                }\n                else if (nScore === nBestScore) {\n                    bestMoves.push({ row, column });\n                }\n            }\n        }\n        // bestMoves.sort((move1, move2) => {\n        // \tif (move1.row !== move2.row) {\n        // \t\treturn move1.row - move2.row;\n        // \t} else {\n        // \t\treturn move1.column - move2.column;\n        // \t}\n        // });\n        const selectedBestMove = getRandomArrayElement(bestMoves);\n        if (typeof selectedBestMove !== 'undefined') {\n            returnObject.bestRow = selectedBestMove.row;\n            returnObject.bestColumn = selectedBestMove.column;\n        }\n        else {\n            nBestScore = 0; // No legal moves are possible.\n        }\n        returnObject.bestScore = nBestScore;\n        returnObject.bestMoves = bestMoves;\n        return returnObject;\n    }\n}\n","// github:tom-weatherhead/thaw-reversi-engine.ts/src/game.ts\nimport { Board, boardArea } from './board';\nimport { Player } from './player';\nimport { PlayerColour } from './player-colour';\nexport class Game {\n    // TODO: constructor(options = {}) { ... } ?\n    constructor(boardString = '') {\n        this.victoryScore = boardArea;\n        this.whitePlayer = new Player(PlayerColour.White, this, (boardString.match(/X/g) || []).length);\n        this.blackPlayer = new Player(PlayerColour.Black, this, (boardString.match(/O/g) || []).length);\n        this.whitePlayer.opponent = this.blackPlayer;\n        this.blackPlayer.opponent = this.whitePlayer;\n        this.board = new Board(this.whitePlayer, this.blackPlayer, boardString);\n    }\n    noLegalMovesForPlayer(player) {\n        const result = player.findBestMove(1);\n        // return result.numberOfLegalMoves === 0; // Or:\n        return result.bestMoves.length === 0;\n    }\n    isGameDeadlocked() {\n        return (this.noLegalMovesForPlayer(this.whitePlayer) &&\n            this.noLegalMovesForPlayer(this.blackPlayer));\n    }\n    isGameNotOver() {\n        return (this.whitePlayer.piecePopulation > 0 &&\n            this.blackPlayer.piecePopulation > 0 &&\n            this.whitePlayer.piecePopulation +\n                this.blackPlayer.piecePopulation <\n                boardArea &&\n            !this.isGameDeadlocked());\n    }\n}\nGame.initialBoardAsString = Board.createInitialBoardString();\n","// github:tom-weatherhead/thaw-reversi-engine.ts/src/engine.ts\n'use strict';\nimport { blackPlayerToken } from './board';\nimport { Game } from './game';\n// TODO: Pass an optional 'descriptor = {}' parameter? See avoidwork's filesize.js\nexport function findBestMove(gameState, maxPly) {\n    return gameState.player.findBestMove(maxPly);\n}\nexport function createInitialState(boardAsString, playerToken) {\n    boardAsString = boardAsString || Game.initialBoardAsString;\n    const game = new Game(boardAsString);\n    return {\n        blackPopulation: game.blackPlayer.piecePopulation,\n        boardAsString,\n        game,\n        isGameOver: false,\n        numPiecesFlippedInLastMove: 0,\n        player: playerToken === blackPlayerToken\n            ? game.blackPlayer\n            : game.whitePlayer,\n        whitePopulation: game.whitePlayer.piecePopulation\n    };\n}\nexport function moveManually(gameState, row, column) {\n    const resultOfPlacePiece = gameState.game.board.placePiece(gameState.player, row, column);\n    return {\n        blackPopulation: gameState.game.blackPlayer.piecePopulation,\n        boardAsString: gameState.game.board.getAsString(),\n        game: gameState.game,\n        isGameOver: !gameState.game.isGameNotOver(),\n        numPiecesFlippedInLastMove: typeof resultOfPlacePiece !== 'undefined'\n            ? resultOfPlacePiece.flippedPieces.length\n            : 0,\n        player: gameState.player.opponent,\n        whitePopulation: gameState.game.whitePlayer.piecePopulation\n    };\n}\nexport function moveAutomatically(gameState, maxPly) {\n    const lastBestMoveInfo = findBestMove(gameState, maxPly);\n    const result = moveManually(gameState, lastBestMoveInfo.bestRow, lastBestMoveInfo.bestColumn);\n    result.lastBestMoveInfo = lastBestMoveInfo;\n    return result;\n}\nexport function getURLFriendlyBoardStringFromGameState(gameState) {\n    return gameState.game.board.getAsString().replace(/ /g, 'E');\n}\n","import React from 'react'\n\n// svg from flaticons\n\nexport const Undo = () => {\n  return (<svg className=\"svgicon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30px\" height=\"30px\" viewBox=\"0 0 438.536 438.536\" enableBackground=\"new 0 0 438.536 438.536\">\n    <g>\n      <path d=\"M421.125,134.191c-11.608-27.03-27.217-50.347-46.819-69.949C354.7,44.639,331.384,29.033,304.353,17.42   C277.325,5.807,248.969,0.005,219.275,0.005c-27.978,0-55.052,5.277-81.227,15.843C111.879,26.412,88.61,41.305,68.243,60.531   l-37.12-36.835c-5.711-5.901-12.275-7.232-19.701-3.999C3.807,22.937,0,28.554,0,36.547v127.907c0,4.948,1.809,9.231,5.426,12.847   c3.619,3.617,7.902,5.426,12.85,5.426h127.907c7.996,0,13.61-3.807,16.846-11.421c3.234-7.423,1.903-13.988-3.999-19.701   l-39.115-39.398c13.328-12.563,28.553-22.222,45.683-28.98c17.131-6.757,35.021-10.138,53.675-10.138   c19.793,0,38.687,3.858,56.674,11.563c17.99,7.71,33.544,18.131,46.679,31.265c13.134,13.131,23.555,28.69,31.265,46.679   c7.703,17.987,11.56,36.875,11.56,56.674c0,19.798-3.856,38.686-11.56,56.672c-7.71,17.987-18.131,33.544-31.265,46.679   c-13.135,13.134-28.695,23.558-46.679,31.265c-17.987,7.707-36.881,11.561-56.674,11.561c-22.651,0-44.064-4.949-64.241-14.843   c-20.174-9.894-37.209-23.883-51.104-41.973c-1.331-1.902-3.521-3.046-6.567-3.429c-2.856,0-5.236,0.855-7.139,2.566   l-39.114,39.402c-1.521,1.53-2.33,3.478-2.426,5.853c-0.094,2.385,0.527,4.524,1.858,6.427   c20.749,25.125,45.871,44.587,75.373,58.382c29.502,13.798,60.625,20.701,93.362,20.701c29.694,0,58.05-5.808,85.078-17.416   c27.031-11.607,50.34-27.22,69.949-46.821c19.605-19.609,35.211-42.921,46.822-69.949s17.411-55.392,17.411-85.08   C438.536,189.569,432.732,161.22,421.125,134.191z\"/>\n    </g>\n  </svg>);\n}\n\nexport const NewGame = () => {\n  return (<svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 512 512\" width=\"30px\" height=\"30px\" viewBox=\"0 0 512 512\">\n    <g><path d=\"m435.064 88.116c-47.955-23.921-111.548-37.095-179.064-37.095-51.316 0-100.776 7.659-143.03 22.149l4.865 14.188c40.707-13.958 88.484-21.337 138.165-21.337 65.237 0 126.452 12.614 172.368 35.518 44.258 22.077 68.632 50.822 68.632 80.94s-24.374 58.863-68.632 80.94c-45.916 22.904-107.131 35.518-172.368 35.518s-126.452-12.614-172.368-35.518c-44.258-22.077-68.632-50.822-68.632-80.94 0-17.166 7.842-33.805 23.309-49.455 15.391-15.573 38.141-29.61 65.79-40.592l-5.537-13.94c-62.638 24.879-98.562 62.781-98.562 103.987v147.042c0 36.103 27.323 69.614 76.936 94.362 47.955 23.921 111.548 37.095 179.064 37.095 51.323 0 100.782-7.659 143.031-22.149l-4.866-14.188c-40.702 13.959-88.478 21.338-138.165 21.338-65.237 0-126.452-12.614-172.368-35.518-44.258-22.077-68.632-50.822-68.632-80.94v-28.818c18.308 21.383 45.953 39.894 81.351 54.271 46.249 18.782 101.455 28.711 159.649 28.711s113.4-9.929 159.649-28.712c35.398-14.376 63.043-32.888 81.351-54.27v28.818c0 17.166-7.842 33.804-23.309 49.455-15.391 15.573-38.141 29.61-65.79 40.592l5.537 13.94c62.638-24.881 98.562-62.782 98.562-103.987v-147.042c0-36.103-27.323-69.614-76.936-94.363zm61.936 186.748c-31.437 55.325-130.066 93.821-241 93.821s-209.563-38.496-241-93.821v-47.402c12.884 18.524 33.829 35.359 61.936 49.38 47.955 23.921 111.548 37.095 179.064 37.095s131.109-13.174 179.064-37.095c28.107-14.021 49.052-30.856 61.936-49.38z\"/><path d=\"m30 182.479c0 28.282 24.339 54.324 68.534 73.328 42.184 18.14 98.106 28.13 157.466 28.13s115.282-9.99 157.466-28.13c44.195-19.004 68.534-45.046 68.534-73.328s-24.339-54.323-68.534-73.328c-42.184-18.14-98.106-28.13-157.466-28.13s-115.282 9.99-157.466 28.13c-44.195 19.005-68.534 45.046-68.534 73.328zm226-86.458c114.374 0 211 39.593 211 86.458s-96.626 86.458-211 86.458-211-39.593-211-86.458 96.626-86.458 211-86.458z\"/><path d=\"m398.498 144.435h15v15h-15z\"/><path d=\"m368.499 129.435h15v15h-15z\"/></g>\n  </svg>);\n}\n\nexport const SwitchColor = () => {\n  return (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30px\" height=\"30px\" viewBox=\"0 0 550.801 550.801\" enableBackground=\"new 0 0 550.801 550.801\">\n    <g>\n      <g>\n        <path d=\"M275.4,0C123.299,0,0,123.299,0,275.4c0,152.1,123.299,275.401,275.4,275.401c152.1,0,275.401-123.301,275.401-275.401    C550.801,123.299,427.5,0,275.4,0z M275.4,470.604c-107.804,0-195.204-87.395-195.204-195.204    c0-107.81,87.4-195.204,195.204-195.204V470.604z\"/>\n      </g>\n    </g>\n  </svg>);\n}\n\nexport const UserHuman = () => {\n  return (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30px\" height=\"30px\" viewBox=\"0 0 477.869 477.869\" enableBackground=\"new 0 0 477.869 477.869\">\n    <g>\n      <g>\n        <path d=\"M387.415,233.496c48.976-44.029,52.987-119.424,8.958-168.4C355.991,20.177,288.4,12.546,239.02,47.332    c-53.83-37.99-128.264-25.149-166.254,28.68c-34.859,49.393-27.259,117.054,17.689,157.483    c-55.849,29.44-90.706,87.481-90.453,150.613v51.2c0,9.426,7.641,17.067,17.067,17.067h443.733    c9.426,0,17.067-7.641,17.067-17.067v-51.2C478.121,320.976,443.264,262.935,387.415,233.496z M307.201,59.842    c47.062-0.052,85.256,38.057,85.309,85.119c0.037,33.564-19.631,64.023-50.237,77.799c-1.314,0.597-2.628,1.143-3.959,1.707    c-4.212,1.699-8.556,3.051-12.988,4.045c-0.853,0.188-1.707,0.29-2.577,0.461c-4.952,0.949-9.977,1.457-15.019,1.519    c-2.27,0-4.557-0.171-6.827-0.375c-0.853,0-1.707,0-2.56-0.171c-9.7-1.142-19.136-3.923-27.904-8.226    c-0.324-0.154-0.7-0.137-1.024-0.273c-1.707-0.819-3.413-1.536-4.932-2.458c0.137-0.171,0.222-0.358,0.358-0.529    c7.826-10.056,13.996-21.296,18.278-33.297l0.529-1.434c1.947-5.732,3.459-11.602,4.523-17.562c0.154-0.87,0.273-1.707,0.41-2.645    c0.987-6.067,1.506-12.2,1.553-18.347c-0.049-6.135-0.568-12.257-1.553-18.313c-0.137-0.887-0.256-1.707-0.41-2.645    c-1.064-5.959-2.576-11.83-4.523-17.562l-0.529-1.434c-4.282-12.001-10.453-23.241-18.278-33.297    c-0.137-0.171-0.222-0.358-0.358-0.529C277.449,63.831,292.19,59.843,307.201,59.842z M85.335,145.176    c-0.121-47.006,37.886-85.21,84.892-85.331c22.034-0.057,43.232,8.434,59.134,23.686c0.99,0.956,1.963,1.911,2.918,2.901    c2.931,3.071,5.634,6.351,8.09,9.813c0.751,1.058,1.434,2.185,2.133,3.277c2.385,3.671,4.479,7.523,6.263,11.52    c0.427,0.973,0.751,1.963,1.126,2.935c1.799,4.421,3.215,8.989,4.233,13.653c0.12,0.512,0.154,1.024,0.256,1.553    c2.162,10.597,2.162,21.522,0,32.119c-0.102,0.529-0.137,1.041-0.256,1.553c-1.017,4.664-2.433,9.232-4.233,13.653    c-0.375,0.973-0.7,1.963-1.126,2.935c-1.786,3.991-3.88,7.837-6.263,11.503c-0.7,1.092-1.382,2.219-2.133,3.277    c-2.455,3.463-5.159,6.742-8.09,9.813c-0.956,0.99-1.929,1.946-2.918,2.901c-6.91,6.585-14.877,11.962-23.569,15.906    c-1.382,0.631-2.782,1.212-4.198,1.707c-4.114,1.633-8.347,2.945-12.663,3.925c-1.075,0.239-2.185,0.375-3.277,0.563    c-4.634,0.863-9.333,1.336-14.046,1.417h-1.877c-4.713-0.08-9.412-0.554-14.046-1.417c-1.092-0.188-2.202-0.324-3.277-0.563    c-4.316-0.98-8.55-2.292-12.663-3.925c-1.417-0.563-2.816-1.143-4.198-1.707C105.013,209.057,85.374,178.677,85.335,145.176z     M307.201,418.242H34.135v-34.133c-0.25-57.833,36.188-109.468,90.76-128.614c29.296,12.197,62.249,12.197,91.546,0    c5.698,2.082,11.251,4.539,16.623,7.356c3.55,1.826,6.827,3.908,10.24,6.007c2.219,1.382,4.471,2.731,6.605,4.25    c3.294,2.338,6.4,4.881,9.455,7.492c1.963,1.707,3.908,3.413,5.751,5.12c2.816,2.662,5.461,5.478,8.004,8.363    c1.826,2.082,3.601,4.198,5.291,6.383c2.236,2.867,4.369,5.803,6.349,8.823c1.707,2.56,3.226,5.222,4.727,7.885    c1.707,2.935,3.277,5.871,4.71,8.926c1.434,3.055,2.697,6.4,3.925,9.66c1.075,2.833,2.219,5.649,3.106,8.533    c1.195,3.959,2.031,8.055,2.867,12.151c0.512,2.423,1.178,4.796,1.553,7.253c1.011,6.757,1.53,13.579,1.553,20.412V418.242z     M443.735,418.242h-102.4v-34.133c0-5.342-0.307-10.633-0.785-15.872c-0.137-1.536-0.375-3.055-0.546-4.591    c-0.461-3.772-0.99-7.509-1.707-11.213c-0.307-1.581-0.631-3.169-0.973-4.762c-0.819-3.8-1.769-7.566-2.85-11.298    c-0.358-1.229-0.683-2.475-1.058-3.686c-4.779-15.277-11.704-29.797-20.565-43.127l-0.666-0.973    c-2.935-4.358-6.07-8.573-9.404-12.646l-0.119-0.154c-3.413-4.232-7.117-8.346-11.008-12.237c0.222,0,0.461,0,0.7,0    c4.816,0.633,9.666,0.975,14.524,1.024h0.939c4.496-0.039,8.985-0.33,13.449-0.87c1.399-0.171,2.782-0.427,4.181-0.649    c3.63-0.557,7.214-1.28,10.752-2.167c1.007-0.256,2.031-0.495,3.055-0.785c4.643-1.263,9.203-2.814,13.653-4.642    c54.612,19.127,91.083,70.785,90.829,128.649V418.242z\"/>\n      </g>\n    </g>\n  </svg>);\n}\n\nexport const PlayerComputer = () => {\n  return (<svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 512 512\" height=\"30px\" width=\"30px\" viewBox=\"0 0 512 512\">\n    <g><path d=\"m474.5 18.5h-437c-20.678 0-37.5 16.822-37.5 37.5v330c0 20.678 16.822 37.5 37.5 37.5h160.057l-9.027 31.594c-3.625 12.688-17.835 23.406-31.03 23.406h-56.5c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h310c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5h-56.5c-13.195 0-27.405-10.719-31.03-23.406l-9.027-31.594h160.057c20.678 0 37.5-16.822 37.5-37.5v-330c0-20.678-16.822-37.5-37.5-37.5zm-437 15h437c12.407 0 22.5 10.094 22.5 22.5v262.5h-482v-262.5c0-12.406 10.093-22.5 22.5-22.5zm271.547 425.715c2.058 7.205 6.149 13.824 11.512 19.285h-129.118c5.363-5.461 9.454-12.081 11.512-19.285l10.204-35.715h85.685zm165.453-50.715h-437c-12.407 0-22.5-10.094-22.5-22.5v-52.5h482v52.5c0 12.406-10.093 22.5-22.5 22.5z\"/><path d=\"m37.5 303.5h437c4.142 0 7.5-3.357 7.5-7.5v-240c0-4.143-3.358-7.5-7.5-7.5h-437c-4.142 0-7.5 3.357-7.5 7.5v105c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-97.5h422v225h-422v-97.5c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v105c0 4.143 3.358 7.5 7.5 7.5z\"/><path d=\"m256 348.5c-12.407 0-22.5 10.094-22.5 22.5s10.093 22.5 22.5 22.5 22.5-10.094 22.5-22.5-10.093-22.5-22.5-22.5zm0 30c-4.136 0-7.5-3.364-7.5-7.5s3.364-7.5 7.5-7.5 7.5 3.364 7.5 7.5-3.364 7.5-7.5 7.5z\"/></g>\n  </svg>);\n}\n\nexport const LastMove = () => {\n  return (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30px\" height=\"30px\" viewBox=\"0 0 512 512\"><path d=\"m512 256c0 141.386719-114.613281 256-256 256s-256-114.613281-256-256 114.613281-256 256-256 256 114.613281 256 256zm0 0\" fill=\"#e76e54\"/><path d=\"m384 256c0 70.691406-57.308594 128-128 128s-128-57.308594-128-128 57.308594-128 128-128 128 57.308594 128 128zm0 0\" fill=\"#dd523c\"/></svg>);\n}\n\nexport const CheckMark = () => {\n  return (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30px\" height=\"30px\" viewBox=\"0 -46 417.81333 417\"><path d=\"m159.988281 318.582031c-3.988281 4.011719-9.429687 6.25-15.082031 6.25s-11.09375-2.238281-15.082031-6.25l-120.449219-120.46875c-12.5-12.5-12.5-32.769531 0-45.246093l15.082031-15.085938c12.503907-12.5 32.75-12.5 45.25 0l75.199219 75.203125 203.199219-203.203125c12.503906-12.5 32.769531-12.5 45.25 0l15.082031 15.085938c12.5 12.5 12.5 32.765624 0 45.246093zm0 0\"/></svg>);\n}\n\nexport const SunIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"30px\"\n      height=\"30px\"\n      viewBox=\"0 0 302.4 302.4\"\n    >\n      <g>\n        <path\n          d=\"M204.8,97.6C191.2,84,172,75.2,151.2,75.2s-40,8.4-53.6,22.4c-13.6,13.6-22.4,32.8-22.4,53.6s8.8,40,22.4,53.6    c13.6,13.6,32.8,22.4,53.6,22.4s40-8.4,53.6-22.4c13.6-13.6,22.4-32.8,22.4-53.6S218.8,111.2,204.8,97.6z M190.4,190.4    c-10,10-24,16-39.2,16s-29.2-6-39.2-16s-16-24-16-39.2s6-29.2,16-39.2s24-16,39.2-16s29.2,6,39.2,16s16,24,16,39.2    S200.4,180.4,190.4,190.4z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M292,140.8h-30.8c-5.6,0-10.4,4.8-10.4,10.4c0,5.6,4.8,10.4,10.4,10.4H292c5.6,0,10.4-4.8,10.4-10.4    C302.4,145.6,297.6,140.8,292,140.8z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M151.2,250.8c-5.6,0-10.4,4.8-10.4,10.4V292c0,5.6,4.8,10.4,10.4,10.4c5.6,0,10.4-4.8,10.4-10.4v-30.8    C161.6,255.6,156.8,250.8,151.2,250.8z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M258,243.6l-22-22c-3.6-4-10.4-4-14.4,0s-4,10.4,0,14.4l22,22c4,4,10.4,4,14.4,0S262,247.6,258,243.6z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M151.2,0c-5.6,0-10.4,4.8-10.4,10.4v30.8c0,5.6,4.8,10.4,10.4,10.4c5.6,0,10.4-4.8,10.4-10.4V10.4    C161.6,4.8,156.8,0,151.2,0z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M258.4,44.4c-4-4-10.4-4-14.4,0l-22,22c-4,4-4,10.4,0,14.4c3.6,4,10.4,4,14.4,0l22-22C262.4,54.8,262.4,48.4,258.4,44.4z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M41.2,140.8H10.4c-5.6,0-10.4,4.8-10.4,10.4s4.4,10.4,10.4,10.4h30.8c5.6,0,10.4-4.8,10.4-10.4    C51.6,145.6,46.8,140.8,41.2,140.8z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M80.4,221.6c-3.6-4-10.4-4-14.4,0l-22,22c-4,4-4,10.4,0,14.4s10.4,4,14.4,0l22-22C84.4,232,84.4,225.6,80.4,221.6z\"\n        />\n      </g>\n      <g>\n        <path\n          d=\"M80.4,66.4l-22-22c-4-4-10.4-4-14.4,0s-4,10.4,0,14.4l22,22c4,4,10.4,4,14.4,0S84.4,70.4,80.4,66.4z\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nexport const MoonIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25px\" height=\"25px\" viewBox=\"0 0 312.812 312.812\" className=\"moonSvg\">\n    <g>\n      <path d=\"M305.2,178.159c-3.2-0.8-6.4,0-9.2,2c-10.4,8.8-22.4,16-35.6,20.8c-12.4,4.8-26,7.2-40.4,7.2c-32.4,0-62-13.2-83.2-34.4    c-21.2-21.2-34.4-50.8-34.4-83.2c0-13.6,2.4-26.8,6.4-38.8c4.4-12.8,10.8-24.4,19.2-34.4c3.6-4.4,2.8-10.8-1.6-14.4    c-2.8-2-6-2.8-9.2-2c-34,9.2-63.6,29.6-84.8,56.8c-20.4,26.8-32.4,60-32.4,96c0,43.6,17.6,83.2,46.4,112s68,46.4,112,46.4    c36.8,0,70.8-12.8,98-34c27.6-21.6,47.6-52.4,56-87.6C314,184.959,310.8,179.359,305.2,178.159z\" />\n    </g>\n    </svg>\n  );\n}\n","import React from 'react';\n\n// https://github.com/tom-weatherhead/thaw-reversi-engine.ts\nimport * as engine from './reversi/engine.js';\n\nimport {\n  Undo,\n  NewGame,\n  SwitchColor,\n  UserHuman,\n  PlayerComputer,\n  LastMove,\n  CheckMark\n} from './icons';\n\nimport './othello.css';\n\nexport default class Othello extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      a : [\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1, 1, 0,-1,-1,-1],\n        [-1,-1,-1, 0, 1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1]\n      ],\n      prev: [\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1, 1, 0,-1,-1,-1],\n        [-1,-1,-1, 0, 1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1]\n      ],\n      turn : 0,\n      demo: 0,\n      winner: -1,\n      black: 2,\n      white: 2,\n      player: 0,\n      human: 0,\n      passes: 0,\n      showLast: true,\n      showAvail: true,\n      last: [-1,-1]\n    }\n  }\n\n  reset(){\n    this.setState({\n      a : [\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1, 1, 0,-1,-1,-1],\n        [-1,-1,-1, 0, 1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1]\n      ],\n      prev: [\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1, 1, 0,-1,-1,-1],\n        [-1,-1,-1, 0, 1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1],\n        [-1,-1,-1,-1,-1,-1,-1,-1]\n      ],\n      turn : 0,\n      demo: 0,\n      winner: -1,\n      black: 2,\n      white: 2,\n      passes: 0,\n      last: [-1,-1]\n    }, ()=>{\n      this.validMoves()\n      this.move(3,3)\n    })\n  }\n\n  gameResult(comp = 0){\n    var a = this.state.a\n\n    var neg = 0,\n        one = 0,\n        zero = 0\n\n    for (var i = 0; i < 8; i++) {\n      for(var j = 0; j < 8; j++) {\n        if(a[i][j]<0){\n          neg+=1\n        }else if (a[i][j]==1) {\n          one+=1\n        }else{\n          zero+=1\n        }\n      }\n    }\n\n    if(neg==0 || comp){\n      var winner = 2;\n      if(one>zero){\n        winner = 1\n      }\n      if(zero>one){\n        winner = 0\n      }\n      this.setState({black: zero, white: one,winner: winner, demo: this.state.demo^1})\n    }else{\n      this.setState({black: zero, white: one, demo: this.state.demo^1})\n    }\n  }\n\n  isValid(i,j){\n    return i>=0 && i<8 && j>=0 && j<8\n  }\n\n  passAnimation(){\n    if(this.state.winner<0){\n      document.getElementById('passContainer').classList.add(\"passed\");\n      setTimeout(()=>{\n        document.getElementById('passContainer').classList.remove(\"passed\");\n      },800)\n    }\n  }\n\n  isAllowed(i,j){\n    // console.log(\"Al\");\n    var a = this.state.a\n    var t = this.state.turn\n\n    // console.log(\"Al\",t);\n\n    if(a[i][j]>=0){\n      return 0\n    }\n\n    for (var x = -1; x < 2; x++) {\n      for (var y = -1; y < 2; y++) {\n        if(x!=0 || y!=0){\n          var tot = 0\n          var m = i, n = j;\n\n          while(this.isValid(m+x,n+y)){\n            if(a[m+x][n+y]!=(t^1)){\n              if(a[m+x][n+y]<0){\n                tot = 0\n              }\n              // console.log(\"Un\");\n              if(tot){\n                return 1\n              }\n              break\n            }\n            tot+=1\n            m+=x\n            n+=y\n          }\n        }\n      }\n    }\n\n    // console.log(\"Log\");\n    return 0\n  }\n\n  updateBoard(i,j){\n    var a = this.state.a\n    var t = this.state.turn^1\n\n    // console.log(\"Update\",t,i,j);\n\n    for (var x = -1; x < 2; x++) {\n      for (var y = -1; y < 2; y++) {\n        if(x!=0 || y!=0){\n          var tot = 0\n          var f = 0\n          var m = i, n = j;\n          while(this.isValid(m+x,n+y)){\n            if(a[m+x][n+y]!=(t^1)){\n              if(a[m+x][n+y]<0){\n                tot = 0\n              }else{\n                f = 1\n              }\n              break\n            }\n            tot+=1\n            m+=x\n            n+=y\n          }\n\n\n          if(tot && f){\n            // console.log(\"Lol\");\n            m = i\n            n = j\n\n            while(this.isValid(m+x,n+y)){\n              if(a[m+x][n+y]!=(t^1)){\n                break\n              }\n              a[m+x][n+y]^=1\n              m+=x\n              n+=y\n            }\n\n          }\n        }\n      }\n    }\n\n    this.setState({a:a, demo: this.state.demo^1},()=>{\n      this.validMoves();\n      this.gameResult();\n    })\n  }\n\n  validMoves(){\n    if(this.state.winner>=0) return\n\n    if(this.state.passes>1){\n      this.gameResult(1)\n    }\n\n    var a = this.state.a\n    // var t = this.state.turn\n    var count = 0\n    // console.log(\"valid\",t);\n\n    for (var i = 0; i < 8; i++) {\n      for(var j = 0; j < 8; j++) {\n        if(a[i][j]<0){\n          if(this.isAllowed(i,j)){\n            a[i][j] = -2\n            count+=1\n            // console.log(i,j,-2)\n          }else{\n            a[i][j] = -1\n          }\n        }\n      }\n    }\n\n    if(count==0){\n      if(this.state.passes<2){\n        setTimeout(()=>{\n          this.setState({a:a, passes: this.state.passes+1, turn: this.state.turn^1},()=>{\n            this.validMoves()\n            this.passAnimation()\n            if(this.state.turn==(this.state.player^1) && this.state.human==0){\n              setTimeout(()=>{\n                this.opponent()\n              },400)\n            }\n          })\n        },300);\n      }\n    }else{\n      this.setState({a:a,passes: 0,demo: this.state.demo^1})\n    }\n  }\n\n  bestMove(){\n    var a = this.state.a,\n        st = \"\"\n\n    for (var i = 0; i < 8; i++) {\n      for(var j = 0; j < 8; j++) {\n        if(a[i][j]<0){\n          st+=\" \"\n        }else if (a[i][j]^this.state.player) {\n          st+=\"X\"\n        }else{\n          st+=\"O\"\n        }\n      }\n    }\n\n    var boardString = engine.createInitialState(st);\n    var player = 'X';\n    console.log(player);\n    var maxPly = 9;\n\n    try {\n      var result = engine.findBestMove(boardString, player, maxPly);\n      console.log(\"Best move\");\n      return [result.bestRow, result.bestColumn]\n    }catch (error) {\n      console.error('engine.findBestMove() threw an exception:', error);\n      return [-1,-1]\n    }\n  }\n\n  checkInclution(b,x){\n    for (var i = 0; i < b.length; i++) {\n      if(b[i][0]==x[0]&&b[i][1]==x[1]) return true\n    }\n\n    return false;\n  }\n\n  opponent(){\n    console.log(\"Opponent\");\n    if(this.state.winner>=0 || this.state.human) return\n\n    if(this.state.turn!=(this.state.player^1)) return\n\n    var a = this.state.a,\n      t = this.state.turn,\n      b = []\n\n    for (var i = 0; i < 8; i++) {\n      for(var j = 0; j < 8; j++) {\n        if(a[i][j]==-2){\n          b.push([i,j])\n        }\n      }\n    }\n\n    if(b.length){\n      var x = this.bestMove()\n      if(x[0]+1==0 || this.checkInclution(b,x)==false){\n        console.log(\"Random\");\n        x = b[Math.floor(Math.random()*b.length)]\n      }\n\n      a[x[0]][x[1]] = t\n      this.setState({a:a,last: [x[0],x[1]],turn:this.state.turn^1},()=>{\n        this.updateBoard(x[0],x[1])\n      })\n    }\n  }\n\n  undoMove(){\n    if(this.state.human) return\n    console.log(\"undoMove\");\n    this.setState({a: this.state.prev},()=>{\n      this.validMoves();\n      this.gameResult();\n    })\n  }\n\n  move(i,j){\n    // console.log(\"Move\");\n    if(this.state.winner>=0) return\n\n    if(this.state.turn==(this.state.player^1) && this.state.human==0){\n      setTimeout(()=>{\n        this.opponent()\n      },400)\n      return\n    }\n\n    var a = this.state.a\n    var b = a.map(arr=>arr.slice());\n    var t = this.state.turn\n\n    if(a[i][j]<0 && this.isAllowed(i,j)){\n      // console.log(\"isAllowed\");\n      a[i][j] = t\n      // console.log(a[i][j]==b[i][j]);\n      this.setState({a:a, prev: b,last: [i,j],turn:this.state.turn^1},()=>{\n        this.updateBoard(i,j)\n        setTimeout(()=>{\n          this.opponent()\n        },400)\n      })\n    }\n  }\n\n  humanGame(){\n    this.setState({\n      human: this.state.human^1\n    },()=>{\n      this.reset();\n    })\n  }\n\n  switchColor(){\n    if(this.state.human) return\n\n    this.setState({\n      player: this.state.player^1\n    },()=>{\n      this.reset();\n    })\n  }\n\n  toggleLastMove(){\n    this.setState({showLast: this.state.showLast^1})\n  }\n\n  toggleAvailMoves(){\n    this.setState({showAvail: this.state.showAvail^1})\n  }\n\n  componentWillMount(){\n    this.validMoves()\n  }\n\n  render() {\n    return (\n      <div className=\"othello-game\">\n        <div className=\"score\">\n          <div className={(this.state.turn==0 && this.state.winner<0?\"points outlined\":\"points\") + (this.state.human==0&&this.state.player==0?\" humanPlayer\":\"\")}><div className=\"demopiece\"></div><span>{this.state.black}</span></div>\n          <div className=\"points\" id=\"passContainer\"><b>PASS</b></div>\n          <div className={(this.state.turn==1 && this.state.winner<0?\"points outlined\":\"points\") + (this.state.human==0&&this.state.player==1?\" humanPlayer\":\"\")}><div className=\"demopiece white\"></div><span>{this.state.white}</span></div>\n        </div>\n        <div className=\"gamescreen\">\n          <div className=\"board\">\n            {this.state.a.map((row,i)=>{\n              return row.map((box,j)=>{\n                return(\n                  <div className=\"box\" onClick={()=>{\n                    this.move(i,j)\n                  }}>\n                    {box>=0?(\n                      <div className={box==1 ? \"piece\":\"piece back\" }>\n                        <div className=\"white\"></div>\n                        <div className=\"black\"></div>\n                      </div>\n                    ):null}\n                    {box>=0 && this.state.showLast && i==this.state.last[0] && j==this.state.last[1]?(\n                      <div className=\"last\"></div>\n                    ):null}\n                    {box==-2 && this.state.showAvail && (this.state.turn==this.state.player || this.state.human)? (\n                      <div className={this.state.turn==1 ? \"avail\":\"avail avail-black\"}></div>\n                    ):null}\n                  </div>\n                )\n              })\n            })}\n          </div>\n          <div className=\"oth-options\">\n            <div className=\"playoption\">\n              <div className=\"svgcontainer\" onClick={this.undoMove.bind(this)}>\n                <Undo/>\n              </div>\n              <span>\n                Undo\n              </span>\n            </div>\n            <div className=\"playoption\">\n              <div className=\"svgcontainer\" onClick={this.reset.bind(this)}>\n                <NewGame/>\n              </div>\n              <span>\n                New\n              </span>\n            </div>\n            <div className=\"playoption\">\n              <div className=\"svgcontainer\" onClick={this.humanGame.bind(this)} title=\"Against a human (get a friend)\">\n                {this.state.human?<UserHuman/>:<PlayerComputer/>}\n              </div>\n              <span>\n                {this.state.human?\"Human\":\"Computer\"}\n              </span>\n            </div>\n            <div className=\"playoption\">\n              <div className=\"svgcontainer\" onClick={this.switchColor.bind(this)} title=\"switch color of your player\">\n                <SwitchColor/>\n              </div>\n              <span>\n                {this.state.player==1?\"White\":\"Black\"}\n              </span>\n            </div>\n            <div className=\"playoption\">\n              <div className=\"svgcontainer\" onClick={this.toggleLastMove.bind(this)}>\n                <LastMove/>\n              </div>\n              <span>\n                Last move\n              </span>\n            </div>\n            <div className=\"playoption\">\n              <div className=\"svgcontainer\" onClick={this.toggleAvailMoves.bind(this)}>\n                <CheckMark/>\n              </div>\n              <span>\n                Valid move\n              </span>\n            </div>\n          </div>\n        </div>\n        {this.state.winner>=0?(\n          <div className=\"winnercontainer\">\n            <div className=\"winnercard\">\n              <span className=\"result\">\n                {this.state.winner==0?\"Black\":null}\n                {this.state.winner==1?\"White\":null}\n                {this.state.winner<2?\" won\":null}\n                {this.state.winner==2?\"Draw\":null}\n              </span>\n              <span className=\"again\" onClick={this.reset.bind(this)}>Play again</span>\n            </div>\n          </div>\n        ):null}\n      </div>\n    )\n  }\n}\n\n\n// [0, 0, 0, 0, 0, 0, 1, -1],\n// [0, 0, 0, 0, 0, 0, 0, 0],\n// [0, 0, 0, 0, 0, 0, 0, 0],\n// [0, 0, 0, 1, 0, 0, 0, 0],\n// [1, 1, 1, 0, 1, 1, 1, 1],\n// [1, 1, 1, 1, 1, 1, 1, 1],\n// [1, 1, 1, 1, 1, 1, 1, 1],\n// [1, 1, 1, 1, 1, 1, 1, 1]\n\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [1,-1,-1,-1,-1,-1,-1,-1],\n// [1,1,-1,-1,-1,-1,-1,-1],\n// [1,1,1,-1,-1,-1,-1,-1],\n// [0,1,-1,1,-1,-1,-1,-1]\n\n// [-1,-1,-1,-1,-1,-1,-1,1],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [1,-1,-1,-1,-1,-1,-1,-1],\n// [0,-1,-1,-1,-1,-1,-1,-1]\n\n// [-1,-1,-1,-1,-1,-1,-1,1],\n// [-1,-1,-1,-1,-1,-1,-1,0],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,0],\n// [-1,-1,-1,-1,-1,-1,-1,-1],\n// [-1,-1,-1,-1,-1,-1,-1,0],\n// [1,-1,-1,-1,-1,-1,-1,-1],\n// [0,-1,-1,-1,-1,-1,-1,-1]\n","import React from 'react';\nimport './App.css';\nimport Othello from './components/othello.js';\nimport {\n  SunIcon,\n  MoonIcon\n} from './components/icons.js';\n\nfunction App(props) {\n  var [theme, setTheme] = React.useState(\"light\");\n\n  const changeTheme = ()=>{\n    var themes = {\n      \"light\": \"dark\",\n      \"dark\": \"light\"\n    }\n\n    document.body.setAttribute(\"theme\",themes[theme]);\n    setTheme(themes[theme]);\n  }\n\n  return (<div className=\"App\">\n    <Othello/>\n    <div>\n      <a tabIndex={0} href=\"https://github.com/blueedgetechno/othello\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n        <svg width={80} height={80} className=\"github-badge\" viewBox=\"0 0 250 250\" style={{\n            fill: '#151513',\n            color: '#fff',\n            position: 'absolute',\n            top: 0,\n            border: 0,\n            right: 0\n          }} aria-hidden=\"true\">\n          <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"/>\n          <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{\n              transformOrigin: '130px 106px'\n            }} className=\"octo-arm\"/>\n          <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"/>\n        </svg>\n      </a>\n    </div>\n    <div className=\"darkmode\" onClick={changeTheme}>\n      {theme==\"light\"?<SunIcon/>:<MoonIcon/>}\n    </div>\n    <div className=\"unescapeLink\">\n      <a href=\"https://blueedge.me/unescape\" target=\"_blank\">UNESCAPE 🎮</a>\n    </div>\n  </div>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}